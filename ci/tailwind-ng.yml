name: 'tailwind-ng'

trigger:
  paths:
    include:
      - projects/tailwind-ng-ui/src/*
      - projects/tailwind-ng-themes/*
      - ci/tailwind-ng.yml

pool: Lab

variables:
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      - group: tailwind-ng-main
  - ${{ elseif eq(variables['Build.SourceBranchName'], 'next') }}:
      - group: tailwind-ng-next
  - ${{ else }}:
      - group: tailwind-ng-insiders
  - name: Patch
    value: $[counter(variables.MajorMinor, 0)]

stages:
  - stage: CI
    jobs:
      - job: Build_Test_Publish
        steps:
          - checkout: self
            persistCredentials: true

          - bash: docker build -t tailwind-ng-ui:ci -o "type=local,dest=./" -f ci/tailwind-ng.Dockerfile .
            workingDirectory: $(Build.SourcesDirectory)
            displayName: 'Run CI'

          - task: PublishCodeCoverageResults@1
            displayName: 'Publish code coverage'
            inputs:
              codeCoverageTool: 'cobertura'
              reportDirectory: '$(Build.SourcesDirectory)/coverage'
              summaryFileLocation: '$(Build.SourcesDirectory)/coverage/cobertura-coverage.xml'
              pathToSources: '$(Build.SourcesDirectory)/coverage'

          - task: PublishTestResults@2
            displayName: 'Publish test results'
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'junit.xml'
              searchFolder: '$(Build.SourcesDirectory)/reports'
              mergeTestResults: true
              testRunTitle: '$(Build.DefinitionName)-v$(ReleaseVersion)-tests'

          - publish: artifacts/tailwind-ng-ui
            artifact: drop
            displayName: 'Publish artifact'

          - bash: |
              npm config set //registry.npmjs.org/:_authToken=$(authToken)
              cd $(Build.SourcesDirectory)/projects/tailwind-ng-themes
              npm version $(ReleaseVersion)
              npm publish --tag $(ReleaseTag)
              cd $(Build.SourcesDirectory)/artifacts/tailwind-ng-ui
              npm version $(ReleaseVersion)
              npm publish --tag $(ReleaseTag)
            displayName: 'Release v$(ReleaseVersion)@$(ReleaseTag)'
